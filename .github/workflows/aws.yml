name: Deploy to Amazon ECS

on:
  workflow_run:
    workflows: ["Docker Image CI"]
    types:
      - completed

env:
  AWS_REGION: eu-central-1                  
  ECS_SERVICE: finki-rasporedi-service      
  ECS_CLUSTER: finki-rasporedi-cluster       
  ECS_TASK_DEFINITION: finki_rasporedi_td_backend 
  CONTAINER_NAME: finki_rasporedi_td_backend 
  DOCKERHUB_IMAGE: nnikolovskii/aws-backend-healthy:latest 

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Fill in the DockerHub image in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ env.DOCKERHUB_IMAGE }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
