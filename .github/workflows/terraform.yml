name: CI/CD Pipeline

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker backend
      run: docker build ./dotnet --file ./dotnet/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/aws-backend-healthy:${{ github.sha }}

    - name: Build Docker frontend
      run: docker build ./flutter --file ./flutter/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/flutter-frontend:${{ github.sha }}

    - name: Push Docker image 1
      run: docker push ${{ secrets.DOCKER_USERNAME }}/aws-backend-healthy:${{ github.sha }}

    - name: Push Docker image 2
      run: docker push ${{ secrets.DOCKER_USERNAME }}/flutter-frontend:${{ github.sha }}

  terraform:
    name: 'Terraform'
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1  # Change to your desired region

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./aws-infra

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./aws-infra

    - name: Terraform Plan
      run: terraform plan -input=false -var "backend_image=${{ secrets.DOCKER_USERNAME }}/aws-backend-healthy:${{ github.sha }}" -var "frontend_image=${{ secrets.DOCKER_USERNAME }}/flutter-frontend:${{ github.sha }}"
      working-directory: ./aws-infra

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -var "backend_image=${{ secrets.DOCKER_USERNAME }}/aws-backend-healthy:${{ github.sha }}" -var "frontend_image=${{ secrets.DOCKER_USERNAME }}/flutter-frontend:${{ github.sha }}"
      working-directory: ./aws-infra
